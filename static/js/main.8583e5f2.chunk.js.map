{"version":3,"sources":["js/utils/knownData.tsx","js/utils/utils.tsx","js/components/SwEntry.tsx","js/components/SwExplorer.tsx","js/utils/useFetch.tsx","js/components/Menu.tsx","App.js","reportWebVitals.js","index.js"],"names":["queryTypes","allKnownData","concat","maxPages","getWindowDomain","window","location","href","showUnits","value","unit","getImg","name","dataType","find","element","isKnownData","replace","SwEntriesTemplates","entry","className","birth_year","gender","height","mass","eye_color","hair_color","skin_color","src","alt","title","director","producer","release_date","opening_crawl","MGLT","cargo_capacity","cost_in_credits","hyperdrive_rating","length","manufacturer","max_atmosphering_speed","passengers","starship_class","climate","diameter","orbital_period","gravity","population","rotation_period","surface_water","terrain","consumables","crew","vehicle_class","average_height","average_lifespan","classification","designation","eye_colors","hair_colors","skin_colors","language","SwEntry","props","SWEntryTemplate","type","data","showFetchMoreBtn","pageNo","SwExplorer","loading","error","useState","setPageNo","swData","setSwData","urlName","setDataCallback","setLoading","setError","useEffect","axios","get","then","response","results","catch","err","console","finally","useFetch","state","map","idx","onClick","Menu","useLocation","isCurrentLocation","pattern","pathname","to","App","aria-label","width","viewBox","style","fill","color","position","top","border","right","aria-hidden","d","path","exact","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8583e5f2.chunk.js","sourcesContent":["export const queryTypes = {\n    'characters': 'people',\n    'movies': 'films',\n    'starships': 'starships',\n    'planets': 'planets',\n    'vehicles': 'vehicles',\n    'species': 'species'\n};\n\nconst knownCharacters = ['Luke Skywalker', 'C-3PO', 'R2-D2', 'Darth Vader', 'Leia Organa', 'Obi-Wan Kenobi', 'Anakin Skywalker', 'Chewbacca', 'Han Solo', 'Greedo', 'Jabba Desilijic Tiure', 'Yoda', 'Palpatine',\n'Boba Fett', 'Jango Fett', 'Lando Calrissian', 'Ackbar', 'Qui-Gon Jinn', 'Padmé Amidala', 'Jar Jar Binks', 'Darth Maul', 'Mace Windu', 'Dooku', 'Biggs Darklighter', 'Watto'];\n\nconst knownMovies = ['A New Hope', 'The Empire Strikes Back', 'Return of the Jedi', 'The Phantom Menace', 'Attack of the Clones', 'Revenge of the Sith'];\n\nconst knownStarships = ['Death Star', 'Imperial Shuttle', 'Slave 1' ,'Millennium Falcon', 'Star Destroyer', 'X-wing', 'Y-wing', 'TIE Advanced x1', 'Imperial shuttle', 'Calamari Cruiser', 'A-wing', 'B-wing',\n'Republic Cruiser', 'Naboo fighter', 'Naboo Royal Starship', 'Jedi starfighter', 'Trade Federation cruiser', 'Republic attack cruiser', 'Naboo star skiff', 'Sentinel-class landing craft'];\n\nconst knownVehicles = ['X-34 landspeeder', 'TIE/LN starfighter', 'TIE bomber', 'AT-AT', 'AT-ST', 'Imperial Speeder Bike', 'TIE/IN interceptor', 'AT-RT'];\n\nconst knownSpecies = ['Human', 'Droid', 'Ewok', 'Human', 'Hutt', 'MonCalamari', 'Rodian', 'Wookie', 'Yoda\\'s species', 'Gungan', 'Toydarian', '' ];\n\nconst allKnownData = knownCharacters.concat(knownMovies, knownStarships, knownVehicles, knownSpecies);\n\nexport function isKnownData (name: string) {\n    return allKnownData.find((element) => {\n        return element === name;\n    });\n};\n\nexport const maxPages = {\n    'characters': 9,\n    'movies': 0,\n    'starships': 4,\n    'planets': 6,\n    'vehicles': 4,\n    'species': 4\n};","export function removeWhiteSpaces(string: string) {\n    return string.replace(/\\s/g, '').replace('/','-');\n};\n\nexport function getWindowDomain() {\n    return window.location.href;\n};\n\nexport function showUnits(value: string, unit: string) {\n    return (value !== 'n/a' && value !== 'unknown') ? unit : '';\n};","import { isKnownData } from \"../utils/knownData\";\nimport { getWindowDomain, removeWhiteSpaces, showUnits} from \"../utils/utils\";\n\nconst getImg = (name: string, dataType: string) => {\n    if (isKnownData(name)) {\n        return `${getWindowDomain()}/img/${dataType}/${removeWhiteSpaces(name)}.png`;\n    }\n    else return `${getWindowDomain()}/img/not-found.png`;\n};\n\nexport const SwEntriesCharacters = ({ entry }) => {\n    return (\n        <div className=\"entry\">\n            <h5 className=\"entry__header\">{entry.name}</h5>\n            <p className=\"entry__info\"><span className=\"entry__label\">birth year:</span> {entry.birth_year}</p>                \n            <p className=\"entry__info\"><span className=\"entry__label\">gender:</span> {entry.gender}</p>\n            <p className=\"entry__info\"><span className=\"entry__label\">height:</span> {entry.height} {showUnits(entry.height, 'cm')}</p>\n            <p className=\"entry__info\"><span className=\"entry__label\">mass:</span> {entry.mass} {showUnits(entry.mass, 'kg')}</p>\n            <p className=\"entry__info\"><span className=\"entry__label\">eye color:</span> {entry.eye_color}</p>\n            <p className=\"entry__info\"><span className=\"entry__label\">hair color:</span> {entry.hair_color}</p>\n            <p className=\"entry__info\"><span className=\"entry__label\">skin color:</span> {entry.skin_color}</p>\n            <img src={getImg(entry.name, 'characters')} className=\"entry__img\" alt={entry.name} />\n        </div>      \n    )\n};\n\nexport const SwEntriesMovies = ({ entry }) => {\n    return (\n        <div className=\"entry\">\n            <h5 className=\"entry__header\">{entry.title}</h5>\n            <p className=\"entry__info\"><span className=\"entry__label\">director:</span> {entry.director}</p>\n            <p className=\"entry__info\"><span className=\"entry__label\">producer:</span> {entry.producer}</p>\n            <p className=\"entry__info\"><span className=\"entry__label\">release date:</span> {entry.release_date}</p>\n            <p className=\"entry__long-text\">{entry.opening_crawl}</p>\n            <img src={getImg(entry.title, 'movies')} className=\"entry__img\" alt={entry.name} />\n        </div>\n    )\n};\n\nexport const SwEntriesStarships = ({ entry }) => {\n    return (\n        <div className=\"entry\">\n            <h5 className=\"entry__header\">{entry.name}</h5>\n            <p className=\"entry__info\"><span className=\"entry__label\">megalight per hour:</span> {entry.MGLT}</p>                \n            <p className=\"entry__info\"><span className=\"entry__label\">cargo capacity:</span> {entry.cargo_capacity}</p>\n            <p className=\"entry__info\"><span className=\"entry__label\">cost:</span> {entry.cost_in_credits} {showUnits(entry.cost_in_credits, 'credits')}</p>\n            <p className=\"entry__info\"><span className=\"entry__label\">hyperdrive rating:</span> {entry.hyperdrive_rating}</p>\n            <p className=\"entry__info\"><span className=\"entry__label\">length:</span> {entry.length}</p>\n            <p className=\"entry__info\"><span className=\"entry__label\">manufacturer:</span> {entry.manufacturer}</p>\n            <p className=\"entry__info\"><span className=\"entry__label\">max atmosphering speed:</span> {entry.max_atmosphering_speed}</p>\n            <p className=\"entry__info\"><span className=\"entry__label\">passengers:</span> {entry.passengers}</p>\n            <p className=\"entry__info\"><span className=\"entry__label\">starship class:</span> {entry.starship_class}</p>\n            <img src={getImg(entry.name, 'starships')} className=\"entry__img\" alt={entry.name} />\n        </div>      \n    )\n};\n\nexport const SwEntriesPlanets = ({ entry }) => {\n    return (\n        <div className=\"entry\">\n            <h5 className=\"entry__header\">{entry.name}</h5>\n            <p className=\"entry__info\"><span className=\"entry__label\">climate:</span> {entry.climate}</p>                \n            <p className=\"entry__info\"><span className=\"entry__label\">diameter:</span> {entry.diameter} {showUnits(entry.orbital_period, 'km')}</p>\n            <p className=\"entry__info\"><span className=\"entry__label\">gravity:</span> {entry.gravity}</p>\n            <p className=\"entry__info\"><span className=\"entry__label\">orbital period:</span> {entry.orbital_period} {showUnits(entry.orbital_period, 'years')}</p>\n            <p className=\"entry__info\"><span className=\"entry__label\">population:</span> {entry.population}</p>\n            <p className=\"entry__info\"><span className=\"entry__label\">rotation period:</span> {entry.rotation_period} {showUnits(entry.rotation_period, 'years')}</p>\n            <p className=\"entry__info\"><span className=\"entry__label\">surface water:</span> {entry.surface_water}</p>\n            <p className=\"entry__info\"><span className=\"entry__label\">terrain:</span> {entry.terrain}</p>\n            <img src={getImg(entry.name, 'planets')} className=\"entry__img\" alt={entry.name} />\n        </div>      \n    )\n};\n\nexport const SwEntriesVehicles = ({ entry }) => {\n    return (\n        <div className=\"entry\">\n            <h5 className=\"entry__header\">{entry.name}</h5>\n            <p className=\"entry__info\"><span className=\"entry__label\">cargo capacity:</span> {entry.cargo_capacity}</p>                \n            <p className=\"entry__info\"><span className=\"entry__label\">consumables:</span> {entry.consumables}</p>\n            <p className=\"entry__info\"><span className=\"entry__label\">cost:</span> {entry.cost_in_credits} {showUnits(entry.cost_in_credits, 'credits')}</p>\n            <p className=\"entry__info\"><span className=\"entry__label\">crew:</span> {entry.crew}</p>\n            <p className=\"entry__info\"><span className=\"entry__label\">length:</span> {entry.length} {showUnits(entry.length, 'm')}</p>\n            <p className=\"entry__info\"><span className=\"entry__label\">manufacturer:</span> {entry.manufacturer}</p>\n            <p className=\"entry__info\"><span className=\"entry__label\">max atmosphering speed:</span> {entry.max_atmosphering_speed}</p>\n            <p className=\"entry__info\"><span className=\"entry__label\">passengers:</span> {entry.passengers}</p>\n            <p className=\"entry__info\"><span className=\"entry__label\">vehicle class:</span> {entry.vehicle_class}</p>\n            <img src={getImg(entry.name, 'vehicles')} className=\"entry__img\" alt={entry.name} />\n        </div>      \n    )\n};\n\nexport const SwEntriesSpecies = ({ entry }) => {\n    return (\n        <div className=\"entry\">\n            <h5 className=\"entry__header\">{entry.name}</h5>\n            <p className=\"entry__info\"><span className=\"entry__label\">average height:</span> {entry.average_height} {showUnits(entry.average_height, 'cm')}</p>                \n            <p className=\"entry__info\"><span className=\"entry__label\">average lifespan:</span> {entry.average_lifespan} {showUnits(entry.average_lifespan, 'years')}</p>\n            <p className=\"entry__info\"><span className=\"entry__label\">classification:</span> {entry.classification}</p>\n            <p className=\"entry__info\"><span className=\"entry__label\">designation:</span> {entry.designation}</p>\n            <p className=\"entry__info\"><span className=\"entry__label\">eye colors:</span> {entry.eye_colors}</p>\n            <p className=\"entry__info\"><span className=\"entry__label\">hair colors:</span> {entry.hair_colors}</p>\n            <p className=\"entry__info\"><span className=\"entry__label\">skin colors:</span> {entry.skin_colors}</p>\n            <p className=\"entry__info\"><span className=\"entry__label\">language:</span> {entry.language}</p>\n            <img src={getImg(entry.name, 'species')} className=\"entry__img\" alt={entry.name} />\n        </div>      \n    )\n};\n\nconst SwEntriesTemplates = {\n    'characters': SwEntriesCharacters,\n    'movies': SwEntriesMovies,\n    'starships': SwEntriesStarships,\n    'planets': SwEntriesPlanets,\n    'vehicles': SwEntriesVehicles,\n    'species': SwEntriesSpecies\n};\n\ninterface swProps {\n    type: string;\n    data: object;\n}\n\nexport default function SwEntry(props: swProps) {\n    const SWEntryTemplate = SwEntriesTemplates[props.type];\n\n    return (\n        <div>\n            <SWEntryTemplate entry={props.data}/>\n        </div>    \n    );\n}  ","import { useState } from \"react\";\nimport SwEntry from './SwEntry';\nimport useFetch from \"../utils/useFetch\";\n\nimport { getWindowDomain } from \"../utils/utils\";\nimport { queryTypes, maxPages } from \"../utils/knownData\";\n\nconst showFetchMoreBtn = (pageNo: number, dataType: string) => {\n    return pageNo < maxPages[dataType];\n};\n\nconst initialisePageNoState = () => {\n    return {\n        'characters': 1,\n        'movies': 1,\n        'starships': 1,\n        'planets': 1,\n        'vehicles': 1,\n        'species': 1\n    }\n};\n\nconst initialiseDataState = () => {\n    return {\n        'characters': [],\n        'movies': [],\n        'starships': [],\n        'planets': [],\n        'vehicles': [],\n        'species': []\n    }\n};\n\ninterface swProps {\n\tdataType: string;\n}\n\nexport default function SwExplorer(props: swProps) {\n    const dataType = props.dataType;\n    const [pageNo, setPageNo] = useState(initialisePageNoState());\n    const [swData, setSwData] = useState(initialiseDataState());\n\n    let loading = true, \n        error: string;\n        \n    [loading, error] = useFetch(queryTypes[dataType], pageNo[dataType], (data: []) => {\n        setSwData(state => ({ ...state, [dataType]: [...swData[dataType], ...data]}));\n    });\n    \n    const getSwData = () => {\n        // Spreading \"...state\" ensures we don't \"lose\" pageNo and fetched data of the other types (subpages)\n        setPageNo(state => ({ ...state, [dataType]: state[dataType] + 1 }));\n    };\n\n    return (\n        <div className=\"entries__wrapper\">\n            <div className=\"entries\">\n            {\n                swData[dataType]?.map((entry: object, idx: number) => (\n                    <SwEntry type={dataType} data={entry} key={idx}/>\n                ))\n            }\n            </div>\n            <div className=\"extras\">\n                { error ? error : '' }\n                { loading ? <img src={`${getWindowDomain()}/img/loader.gif`} className=\"loader\" alt=\"fetching content\" /> : '' }\n            </div>\n            {(showFetchMoreBtn(pageNo[dataType], dataType) && !error) ? \n                <p>\n                    <button onClick={() => {\n                        getSwData()\n                    }} className=\"btn\">fetch more data</button>\n                </p>\n                : ''\n            }\n        </div>\n    )\n}  ","import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\n// This custom hook centralizes and streamlines handling of HTTP calls\nexport default function useFetch(urlName: string, pageNo: number, setDataCallback: (data: []) => void) {\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    setLoading(true);\n    axios\n        .get(`https://swapi.dev/api/${urlName}/?page=${pageNo}`)\n        .then(response => {\n          if (response.data) return response.data.results;\n        })\n        .then(data => {\n          //call callback from the parent component\n          setDataCallback(data)\n        })\n        .catch(err => {\n          console.error(err);\n          setError('An error occured. Please try again later.');\n        })\n        .finally(() => setLoading(false));\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [urlName, pageNo]);\n\n  return [ loading, error ];\n}","import {\n    Link,\n    useLocation\n  } from \"react-router-dom\";\n\nexport default function Menu() {\n    const location = useLocation();\n\n    const isCurrentLocation = (pattern: string) => {\n        return location.pathname === pattern;\n    }\n\n    return (\n        <div>\n            <ul className=\"menu\">\n                <li className=\"menu__item\">\n                    <Link to=\"/characters\" className={isCurrentLocation('/characters') ? \"menu__link menu__link--active\" : \"menu__link\"}>Characters</Link>\n                </li>\n                <li className=\"menu__item\">\n                    <Link to=\"/movies\" className={isCurrentLocation('/movies') ? \"menu__link menu__link--active\" : \"menu__link\"}>Movies</Link>\n                </li>\n                <li className=\"menu__item\">\n                    <Link to=\"/starships\" className={isCurrentLocation('/starships') ? \"menu__link menu__link--active\" : \"menu__link\"}>Starships</Link>\n                </li>\n                <li className=\"menu__item\">\n                    <Link to=\"/planets\" className={isCurrentLocation('/planets') ? \"menu__link menu__link--active\" : \"menu__link\"}>Planets</Link>\n                </li>\n                <li className=\"menu__item\">\n                    <Link to=\"/vehicles\" className={isCurrentLocation('/vehicles') ? \"menu__link menu__link--active\" : \"menu__link\"}>Vehicles</Link>\n                </li>\n                <li className=\"menu__item\">\n                    <Link to=\"/species\" className={isCurrentLocation('/species') ? \"menu__link menu__link--active\" : \"menu__link\"}>Species</Link>\n                </li>\n            </ul>\n        </div>\n    )\n}  ","import './App.css';\nimport SwExplorer from './js/components/SwExplorer.tsx';\nimport Menu from './js/components/Menu.tsx';\nimport { getWindowDomain } from \"./js/utils/utils\";\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  Redirect\n} from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <nav>\n          <header className=\"header\">\n            <img src={`${getWindowDomain()}/img/star.svg`} alt=\"Star\" className=\"header__img\"/>\n            <img src={`${getWindowDomain()}/img/wars.svg`} alt=\"Wars\" className=\"header__img\"/>\n          </header>\n          <Menu/>\n        </nav>\n        {/* Taken from https://github.com/tholman/github-corners */}\n        <a href=\"https://github.com/Calanthe/swexplorer\" className=\"github-corner\" aria-label=\"View source on GitHub\">\n            <svg width=\"80\" height=\"80\" viewBox=\"0 0 250 250\" style={{fill: '#000000', color: '#FDF253', position: 'absolute', top: 0, border: 0, right: 0}} aria-hidden=\"true\">\n                <path d=\"M0,0 L115,115 L130,115 L142,142 L250,250 L250,0 Z\"></path>\n                <path d=\"M128.3,109.0 C113.8,99.7 119.0,89.6 119.0,89.6 C122.0,82.7 120.5,78.6 120.5,78.6 C119.2,72.0 123.4,76.3 123.4,76.3 C127.3,80.9 125.5,87.3 125.5,87.3 C122.9,97.6 130.6,101.9 134.4,103.2\" fill=\"currentColor\" className=\"octo-arm octo-transform\"></path>\n                <path d=\"M115.0,115.0 C114.9,115.1 118.7,116.5 119.8,115.4 L133.7,101.6 C136.9,99.2 139.9,98.4 142.2,98.6 C133.8,88.0 127.5,74.4 143.8,58.0 C148.5,53.4 154.0,51.2 159.7,51.0 C160.3,49.4 163.2,43.6 171.4,40.1 C171.4,40.1 176.1,42.5 178.8,56.2 C183.1,58.6 187.2,61.8 190.9,65.4 C194.5,69.0 197.7,73.2 200.1,77.6 C213.8,80.2 216.3,84.9 216.3,84.9 C212.7,93.1 206.9,96.0 205.4,96.6 C205.1,102.4 203.0,107.8 198.3,112.5 C181.9,128.9 168.3,122.5 157.7,114.1 C157.9,116.9 156.7,120.9 152.7,124.9 L141.0,136.5 C139.8,137.7 141.6,141.9 141.8,141.8 Z\" fill=\"currentColor\" className=\"octo-body\"></path>\n            </svg>\n        </a>\n        <Switch>\n          <Route path=\"/characters\">\n            <SwExplorer key=\"characters\" dataType=\"characters\"/>\n          </Route>\n          <Route path=\"/movies\">\n            <SwExplorer key=\"movies\"  dataType=\"movies\"/>\n          </Route>\n          <Route path=\"/starships\">\n            <SwExplorer key=\"starships\"  dataType=\"starships\"/>\n          </Route>\n          <Route path=\"/planets\">\n            <SwExplorer key=\"planets\"  dataType=\"planets\"/>\n          </Route>\n          <Route path=\"/vehicles\">\n            <SwExplorer key=\"vehicles\"  dataType=\"vehicles\"/>\n          </Route>\n          <Route path=\"/species\">\n            <SwExplorer key=\"species\"  dataType=\"species\"/>\n          </Route>\n          <Route \n            exact\n            path=\"/\"\n            render={() => <Redirect to=\"/characters\" />}\n          />\n        </Switch>\n\n        <footer className=\"footer\">\n            <p>Made by <a href=\"https://zofiakorcz.pl\" className=\"footer__link\">Zofia Korcz</a> using <a href=\"https://swapi.dev/\" className=\"footer__link\">The Star Wars API</a>.</p>\n        </footer>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}